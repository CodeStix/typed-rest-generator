/* DO NOT MODIFY, THIS FILE WAS GENERATED */

import type { RequestHandler, RequestHandlerParams, ParamsDictionary } from "express-serve-static-core";
import type { ParsedQs } from "qs";

// // Testing purposes
// export type Endpoints = {
//     post: {
//         "/user": {
//             req: GetUserRequest;
//             res: GetUserResponse;
//         };
//     };
//     get: {};
//     put: {};
//     delete: {};
//     patch: {};
//     options: {};
//     head: {};
//     all: {};
// };
// interface GetUserRequest {
//     userId: number;
// }
// interface GetUserResponse {
//     user: object;
// }

// This was needed apparently
export type EndpointsConstraint = {
    [M in "all" | "get" | "post" | "put" | "delete" | "patch" | "options" | "head"]: {
        [path: string]: {
            req: object | never;
            res: object | never;
        };
    };
};

declare module "express-serve-static-core" {
    // This is why get isn't type checked, we cannot override its default typing
    export interface Application {
        get: ((name: string) => any) & IRouterMatcher<this, "get">;
    }

    export interface IRouterMatcher<T, Method extends "all" | "get" | "post" | "put" | "delete" | "patch" | "options" | "head" = any> {
        <
            Path extends keyof U[Method],
            P = ParamsDictionary,
            ReqQuery = ParsedQs,
            Locals extends Record<string, any> = Record<string, any>,
            U extends EndpointsConstraint = Endpoints
        >(
            path: Path,
            // tslint:disable-next-line no-unnecessary-generics (This generic is meant to be passed explicitly.)
            ...handlers: Array<RequestHandler<P, U[Method][Path]["req"], U[Method][Path]["res"], ReqQuery, Locals>>
        ): T;
        <
            Path extends keyof U[Method],
            P = ParamsDictionary,
            ReqQuery = ParsedQs,
            Locals extends Record<string, any> = Record<string, any>,
            U extends EndpointsConstraint = Endpoints
        >(
            path: Path,
            // tslint:disable-next-line no-unnecessary-generics (This generic is meant to be passed explicitly.)
            ...handlers: Array<RequestHandlerParams<P, U[Method][Path]["req"], U[Method][Path]["res"], ReqQuery, Locals>>
        ): T;
    }
}
